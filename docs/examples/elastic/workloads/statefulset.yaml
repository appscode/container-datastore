apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  annotations:
    elastic.kubedb.com/version: 2.3.1
  creationTimestamp: 2017-06-09T05:50:33Z
  generation: 1
  labels:
    kubedb.com/kind: Elasticsearch
  name: elasticsearch-db-es
  namespace: default
  resourceVersion: "20138428"
  selfLink: /apis/apps/v1beta1/namespaces/default/statefulsets/elasticsearch-db-es
  uid: 8d9d7354-4cd7-11e7-8b69-12f236046fba
spec:
  replicas: 1
  selector:
    matchLabels:
      kubedb.com/kind: Elasticsearch
      kubedb.com/name: elasticsearch-db
  serviceName: kubedb
  template:
    metadata:
      annotations:
        elastic.kubedb.com/version: 2.3.1
        pod.alpha.kubernetes.io/init-containers: '[{"name":"discover","image":"kubedb/es-operator:0.4.0","args":["discover","--service=elasticsearch-db","--namespace=default"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}}],"resources":{},"volumeMounts":[{"name":"discovery","mountPath":"/tmp/discovery"}],"imagePullPolicy":"IfNotPresent"}]'
        pod.beta.kubernetes.io/init-containers: '[{"name":"discover","image":"kubedb/es-operator:0.4.0","args":["discover","--service=elasticsearch-db","--namespace=default"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}}],"resources":{},"volumeMounts":[{"name":"discovery","mountPath":"/tmp/discovery"}],"imagePullPolicy":"IfNotPresent"}]'
      creationTimestamp: null
      labels:
        kubedb.com/kind: Elasticsearch
        kubedb.com/name: elasticsearch-db
    spec:
      containers:
      - env:
        - name: CLUSTER_NAME
          value: elasticsearch-db
        - name: KUBE_NAMESPACE
          value: default
        image: kubedb/elasticsearch:2.3.1
        imagePullPolicy: IfNotPresent
        name: elastic
        ports:
        - containerPort: 9200
          name: api
          protocol: TCP
        - containerPort: 9300
          name: tcp
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /tmp/discovery
          name: discovery
        - mountPath: /var/pv
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: discovery
  volumeClaimTemplates:
  - metadata:
      annotations:
        volume.beta.kubernetes.io/storage-class: gp2
      creationTimestamp: null
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
    status:
      phase: Pending
status:
  replicas: 1
