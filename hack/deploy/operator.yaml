apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: kubedb-operator
  namespace: ${KUBEDB_NAMESPACE}
  labels:
    app: kubedb
  initializers:
    pending: []
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubedb
  template:
    metadata:
      labels:
        app: kubedb
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      serviceAccountName: ${KUBEDB_SERVICE_ACCOUNT}
      imagePullSecrets: [${KUBEDB_IMAGE_PULL_SECRET}]
      containers:
      - name: operator
        args:
        - run
        - --v=3
        - --rbac=${KUBEDB_ENABLE_RBAC}
        - --docker-registry=${KUBEDB_DOCKER_REGISTRY}
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        image: ${KUBEDB_DOCKER_REGISTRY}/kubedb:0.7.0-alpha.0
        ports:
        - containerPort: 8443
        - containerPort: 56790
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
      - name: pushgateway
        args:
        - -web.listen-address=:56789
        - -persistence.file=/var/pv/pushgateway.dat
        image: prom/pushgateway:v0.4.0
        ports:
        - containerPort: 56789
          name: pushgateway
          protocol: TCP
        volumeMounts:
        - mountPath: /var/pv
          name: data-volume
        - mountPath: /tmp
          name: kubedb-scratchdir
      volumes:
      - emptyDir: {}
        name: data-volume
      - emptyDir: {}
        name: kubedb-scratchdir
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubedb-apiserver-cert
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
---
# kube lacks the service serving cert signer, so provide a manual secret for it
apiVersion: v1
kind: Secret
metadata:
  name: kubedb-apiserver-cert
  namespace: ${KUBEDB_NAMESPACE}
  labels:
    app: kubedb
type: kubernetes.io/tls
data:
  tls.crt: ${TLS_SERVING_CERT}
  tls.key: ${TLS_SERVING_KEY}
---
# to be able to expose TSB inside the cluster
apiVersion: v1
kind: Service
metadata:
  name: kubedb-operator
  namespace: ${KUBEDB_NAMESPACE}
  labels:
    app: kubedb
spec:
  ports:
  - name: admission
    port: 443
    targetPort: 8443
  - name: pushgateway
    port: 56789
    targetPort: 56789
  - name: ops
    port: 56790
    targetPort: 56790
  selector:
    app: kubedb
---
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.admission.kubedb.appscode.com
  labels:
    app: kubedb
spec:
  caBundle: ${SERVICE_SERVING_CERT_CA}
  group: admission.kubedb.appscode.com
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: kubedb-operator
    namespace: ${KUBEDB_NAMESPACE}
  version: v1alpha1
